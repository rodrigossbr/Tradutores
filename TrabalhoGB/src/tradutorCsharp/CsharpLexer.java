// Generated from Csharp.g4 by ANTLR 4.5.1
package tradutorCsharp;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CsharpLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, ID=55, OBEJCTID=56, INT=57, NEWLINE=58, WS=59;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "ID", "OBEJCTID", "INT", 
		"NEWLINE", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'package'", "';'", "'public'", "'protected'", "'private'", "'abstract'", 
		"'static'", "'final'", "'strictfp'", "'class'", "'extends'", "'{'", "'}'", 
		"'implements'", "'main'", "'('", "'String[] args'", "')'", "','", "'void'", 
		"'int'", "'string'", "'float'", "'boolean'", "'while'", "'if'", "'else if'", 
		"'else'", "'for'", "'do'", "'try'", "'finally'", "'switch'", "'.'", "'='", 
		"'_'", "'new'", "'catch'", "'case'", "':'", "'default'", "'['", "']'", 
		"'bool'", "'decimal'", "'object'", "'<'", "'>'", "'>='", "'<='", "'||'", 
		"'&&'", "'++'", "'--'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "ID", "OBEJCTID", "INT", "NEWLINE", 
		"WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CsharpLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Csharp.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2=\u01a8\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3"+
		"\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3"+
		"\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3"+
		"\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3"+
		"!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3&\3&\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3"+
		"+\3+\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3"+
		"/\3\60\3\60\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65"+
		"\3\65\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\68\u018e\n8\r8\168\u018f\3"+
		"9\39\69\u0194\n9\r9\169\u0195\3:\6:\u0199\n:\r:\16:\u019a\3;\5;\u019e"+
		"\n;\3;\3;\3<\6<\u01a3\n<\r<\16<\u01a4\3<\3<\2\2=\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=\3\2\7\4\2C\\"+
		"c|\3\2C\\\4\2^^yy\3\2\62;\4\2\13\13\"\"\u01ac\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2"+
		"\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2"+
		"\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2"+
		"\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2"+
		"\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y"+
		"\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2"+
		"\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2"+
		"\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5\u0081\3\2\2\2\7\u0083\3"+
		"\2\2\2\t\u008a\3\2\2\2\13\u0094\3\2\2\2\r\u009c\3\2\2\2\17\u00a5\3\2\2"+
		"\2\21\u00ac\3\2\2\2\23\u00b2\3\2\2\2\25\u00bb\3\2\2\2\27\u00c1\3\2\2\2"+
		"\31\u00c9\3\2\2\2\33\u00cb\3\2\2\2\35\u00cd\3\2\2\2\37\u00d8\3\2\2\2!"+
		"\u00dd\3\2\2\2#\u00df\3\2\2\2%\u00ed\3\2\2\2\'\u00ef\3\2\2\2)\u00f1\3"+
		"\2\2\2+\u00f6\3\2\2\2-\u00fa\3\2\2\2/\u0101\3\2\2\2\61\u0107\3\2\2\2\63"+
		"\u010f\3\2\2\2\65\u0115\3\2\2\2\67\u0118\3\2\2\29\u0120\3\2\2\2;\u0125"+
		"\3\2\2\2=\u0129\3\2\2\2?\u012c\3\2\2\2A\u0130\3\2\2\2C\u0138\3\2\2\2E"+
		"\u013f\3\2\2\2G\u0141\3\2\2\2I\u0143\3\2\2\2K\u0145\3\2\2\2M\u0149\3\2"+
		"\2\2O\u014f\3\2\2\2Q\u0154\3\2\2\2S\u0156\3\2\2\2U\u015e\3\2\2\2W\u0160"+
		"\3\2\2\2Y\u0162\3\2\2\2[\u0167\3\2\2\2]\u016f\3\2\2\2_\u0176\3\2\2\2a"+
		"\u0178\3\2\2\2c\u017a\3\2\2\2e\u017d\3\2\2\2g\u0180\3\2\2\2i\u0183\3\2"+
		"\2\2k\u0186\3\2\2\2m\u0189\3\2\2\2o\u018d\3\2\2\2q\u0191\3\2\2\2s\u0198"+
		"\3\2\2\2u\u019d\3\2\2\2w\u01a2\3\2\2\2yz\7r\2\2z{\7c\2\2{|\7e\2\2|}\7"+
		"m\2\2}~\7c\2\2~\177\7i\2\2\177\u0080\7g\2\2\u0080\4\3\2\2\2\u0081\u0082"+
		"\7=\2\2\u0082\6\3\2\2\2\u0083\u0084\7r\2\2\u0084\u0085\7w\2\2\u0085\u0086"+
		"\7d\2\2\u0086\u0087\7n\2\2\u0087\u0088\7k\2\2\u0088\u0089\7e\2\2\u0089"+
		"\b\3\2\2\2\u008a\u008b\7r\2\2\u008b\u008c\7t\2\2\u008c\u008d\7q\2\2\u008d"+
		"\u008e\7v\2\2\u008e\u008f\7g\2\2\u008f\u0090\7e\2\2\u0090\u0091\7v\2\2"+
		"\u0091\u0092\7g\2\2\u0092\u0093\7f\2\2\u0093\n\3\2\2\2\u0094\u0095\7r"+
		"\2\2\u0095\u0096\7t\2\2\u0096\u0097\7k\2\2\u0097\u0098\7x\2\2\u0098\u0099"+
		"\7c\2\2\u0099\u009a\7v\2\2\u009a\u009b\7g\2\2\u009b\f\3\2\2\2\u009c\u009d"+
		"\7c\2\2\u009d\u009e\7d\2\2\u009e\u009f\7u\2\2\u009f\u00a0\7v\2\2\u00a0"+
		"\u00a1\7t\2\2\u00a1\u00a2\7c\2\2\u00a2\u00a3\7e\2\2\u00a3\u00a4\7v\2\2"+
		"\u00a4\16\3\2\2\2\u00a5\u00a6\7u\2\2\u00a6\u00a7\7v\2\2\u00a7\u00a8\7"+
		"c\2\2\u00a8\u00a9\7v\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7e\2\2\u00ab\20"+
		"\3\2\2\2\u00ac\u00ad\7h\2\2\u00ad\u00ae\7k\2\2\u00ae\u00af\7p\2\2\u00af"+
		"\u00b0\7c\2\2\u00b0\u00b1\7n\2\2\u00b1\22\3\2\2\2\u00b2\u00b3\7u\2\2\u00b3"+
		"\u00b4\7v\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7e\2\2"+
		"\u00b7\u00b8\7v\2\2\u00b8\u00b9\7h\2\2\u00b9\u00ba\7r\2\2\u00ba\24\3\2"+
		"\2\2\u00bb\u00bc\7e\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be\7c\2\2\u00be\u00bf"+
		"\7u\2\2\u00bf\u00c0\7u\2\2\u00c0\26\3\2\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3"+
		"\7z\2\2\u00c3\u00c4\7v\2\2\u00c4\u00c5\7g\2\2\u00c5\u00c6\7p\2\2\u00c6"+
		"\u00c7\7f\2\2\u00c7\u00c8\7u\2\2\u00c8\30\3\2\2\2\u00c9\u00ca\7}\2\2\u00ca"+
		"\32\3\2\2\2\u00cb\u00cc\7\177\2\2\u00cc\34\3\2\2\2\u00cd\u00ce\7k\2\2"+
		"\u00ce\u00cf\7o\2\2\u00cf\u00d0\7r\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2"+
		"\7g\2\2\u00d2\u00d3\7o\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5\7p\2\2\u00d5"+
		"\u00d6\7v\2\2\u00d6\u00d7\7u\2\2\u00d7\36\3\2\2\2\u00d8\u00d9\7o\2\2\u00d9"+
		"\u00da\7c\2\2\u00da\u00db\7k\2\2\u00db\u00dc\7p\2\2\u00dc \3\2\2\2\u00dd"+
		"\u00de\7*\2\2\u00de\"\3\2\2\2\u00df\u00e0\7U\2\2\u00e0\u00e1\7v\2\2\u00e1"+
		"\u00e2\7t\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4\7p\2\2\u00e4\u00e5\7i\2\2"+
		"\u00e5\u00e6\7]\2\2\u00e6\u00e7\7_\2\2\u00e7\u00e8\7\"\2\2\u00e8\u00e9"+
		"\7c\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7i\2\2\u00eb\u00ec\7u\2\2\u00ec"+
		"$\3\2\2\2\u00ed\u00ee\7+\2\2\u00ee&\3\2\2\2\u00ef\u00f0\7.\2\2\u00f0("+
		"\3\2\2\2\u00f1\u00f2\7x\2\2\u00f2\u00f3\7q\2\2\u00f3\u00f4\7k\2\2\u00f4"+
		"\u00f5\7f\2\2\u00f5*\3\2\2\2\u00f6\u00f7\7k\2\2\u00f7\u00f8\7p\2\2\u00f8"+
		"\u00f9\7v\2\2\u00f9,\3\2\2\2\u00fa\u00fb\7u\2\2\u00fb\u00fc\7v\2\2\u00fc"+
		"\u00fd\7t\2\2\u00fd\u00fe\7k\2\2\u00fe\u00ff\7p\2\2\u00ff\u0100\7i\2\2"+
		"\u0100.\3\2\2\2\u0101\u0102\7h\2\2\u0102\u0103\7n\2\2\u0103\u0104\7q\2"+
		"\2\u0104\u0105\7c\2\2\u0105\u0106\7v\2\2\u0106\60\3\2\2\2\u0107\u0108"+
		"\7d\2\2\u0108\u0109\7q\2\2\u0109\u010a\7q\2\2\u010a\u010b\7n\2\2\u010b"+
		"\u010c\7g\2\2\u010c\u010d\7c\2\2\u010d\u010e\7p\2\2\u010e\62\3\2\2\2\u010f"+
		"\u0110\7y\2\2\u0110\u0111\7j\2\2\u0111\u0112\7k\2\2\u0112\u0113\7n\2\2"+
		"\u0113\u0114\7g\2\2\u0114\64\3\2\2\2\u0115\u0116\7k\2\2\u0116\u0117\7"+
		"h\2\2\u0117\66\3\2\2\2\u0118\u0119\7g\2\2\u0119\u011a\7n\2\2\u011a\u011b"+
		"\7u\2\2\u011b\u011c\7g\2\2\u011c\u011d\7\"\2\2\u011d\u011e\7k\2\2\u011e"+
		"\u011f\7h\2\2\u011f8\3\2\2\2\u0120\u0121\7g\2\2\u0121\u0122\7n\2\2\u0122"+
		"\u0123\7u\2\2\u0123\u0124\7g\2\2\u0124:\3\2\2\2\u0125\u0126\7h\2\2\u0126"+
		"\u0127\7q\2\2\u0127\u0128\7t\2\2\u0128<\3\2\2\2\u0129\u012a\7f\2\2\u012a"+
		"\u012b\7q\2\2\u012b>\3\2\2\2\u012c\u012d\7v\2\2\u012d\u012e\7t\2\2\u012e"+
		"\u012f\7{\2\2\u012f@\3\2\2\2\u0130\u0131\7h\2\2\u0131\u0132\7k\2\2\u0132"+
		"\u0133\7p\2\2\u0133\u0134\7c\2\2\u0134\u0135\7n\2\2\u0135\u0136\7n\2\2"+
		"\u0136\u0137\7{\2\2\u0137B\3\2\2\2\u0138\u0139\7u\2\2\u0139\u013a\7y\2"+
		"\2\u013a\u013b\7k\2\2\u013b\u013c\7v\2\2\u013c\u013d\7e\2\2\u013d\u013e"+
		"\7j\2\2\u013eD\3\2\2\2\u013f\u0140\7\60\2\2\u0140F\3\2\2\2\u0141\u0142"+
		"\7?\2\2\u0142H\3\2\2\2\u0143\u0144\7a\2\2\u0144J\3\2\2\2\u0145\u0146\7"+
		"p\2\2\u0146\u0147\7g\2\2\u0147\u0148\7y\2\2\u0148L\3\2\2\2\u0149\u014a"+
		"\7e\2\2\u014a\u014b\7c\2\2\u014b\u014c\7v\2\2\u014c\u014d\7e\2\2\u014d"+
		"\u014e\7j\2\2\u014eN\3\2\2\2\u014f\u0150\7e\2\2\u0150\u0151\7c\2\2\u0151"+
		"\u0152\7u\2\2\u0152\u0153\7g\2\2\u0153P\3\2\2\2\u0154\u0155\7<\2\2\u0155"+
		"R\3\2\2\2\u0156\u0157\7f\2\2\u0157\u0158\7g\2\2\u0158\u0159\7h\2\2\u0159"+
		"\u015a\7c\2\2\u015a\u015b\7w\2\2\u015b\u015c\7n\2\2\u015c\u015d\7v\2\2"+
		"\u015dT\3\2\2\2\u015e\u015f\7]\2\2\u015fV\3\2\2\2\u0160\u0161\7_\2\2\u0161"+
		"X\3\2\2\2\u0162\u0163\7d\2\2\u0163\u0164\7q\2\2\u0164\u0165\7q\2\2\u0165"+
		"\u0166\7n\2\2\u0166Z\3\2\2\2\u0167\u0168\7f\2\2\u0168\u0169\7g\2\2\u0169"+
		"\u016a\7e\2\2\u016a\u016b\7k\2\2\u016b\u016c\7o\2\2\u016c\u016d\7c\2\2"+
		"\u016d\u016e\7n\2\2\u016e\\\3\2\2\2\u016f\u0170\7q\2\2\u0170\u0171\7d"+
		"\2\2\u0171\u0172\7l\2\2\u0172\u0173\7g\2\2\u0173\u0174\7e\2\2\u0174\u0175"+
		"\7v\2\2\u0175^\3\2\2\2\u0176\u0177\7>\2\2\u0177`\3\2\2\2\u0178\u0179\7"+
		"@\2\2\u0179b\3\2\2\2\u017a\u017b\7@\2\2\u017b\u017c\7?\2\2\u017cd\3\2"+
		"\2\2\u017d\u017e\7>\2\2\u017e\u017f\7?\2\2\u017ff\3\2\2\2\u0180\u0181"+
		"\7~\2\2\u0181\u0182\7~\2\2\u0182h\3\2\2\2\u0183\u0184\7(\2\2\u0184\u0185"+
		"\7(\2\2\u0185j\3\2\2\2\u0186\u0187\7-\2\2\u0187\u0188\7-\2\2\u0188l\3"+
		"\2\2\2\u0189\u018a\7/\2\2\u018a\u018b\7/\2\2\u018bn\3\2\2\2\u018c\u018e"+
		"\t\2\2\2\u018d\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u018d\3\2\2\2\u018f"+
		"\u0190\3\2\2\2\u0190p\3\2\2\2\u0191\u0193\t\3\2\2\u0192\u0194\t\4\2\2"+
		"\u0193\u0192\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0193\3\2\2\2\u0195\u0196"+
		"\3\2\2\2\u0196r\3\2\2\2\u0197\u0199\t\5\2\2\u0198\u0197\3\2\2\2\u0199"+
		"\u019a\3\2\2\2\u019a\u0198\3\2\2\2\u019a\u019b\3\2\2\2\u019bt\3\2\2\2"+
		"\u019c\u019e\7\17\2\2\u019d\u019c\3\2\2\2\u019d\u019e\3\2\2\2\u019e\u019f"+
		"\3\2\2\2\u019f\u01a0\7\f\2\2\u01a0v\3\2\2\2\u01a1\u01a3\t\6\2\2\u01a2"+
		"\u01a1\3\2\2\2\u01a3\u01a4\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a4\u01a5\3\2"+
		"\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7\b<\2\2\u01a7x\3\2\2\2\b\2\u018f\u0195"+
		"\u019a\u019d\u01a4\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}